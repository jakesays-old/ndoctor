#labels Phase-Implementation
= Introduction =

All the coding conventions are listed here.


= Components =

While writing a component, developer have to follow these rules:

 * All the components are suffixed with "*`Component`*". For instance, the medical record's component will be called `MedicalRecordComponent`.
 * A methods to retrieve all the entities of a type will be prefixed with *`GetAll`*. A methods to get all the patients will be called `GetAllPatients()`.
 * A method to find entities based on criteria should be prefixed with *`Find`* and suffixed with "*`By...`*" which translates on what the search will be done.

= General notes =
 * When defining a ICommand, always prefix the check method with a *Can*
{{{
    this.SomeCommand = new RelayCommand(() => ExecuteCommand(), () => CanExecuteCommand());
}}}

= Authorisation management =
The authorisation is build on the pattern [http://en.wikipedia.org/wiki/Convention_over_configuration Convention over configuration]. 

Without the attibute {{{GrantedAttribute}}} the authorisation is set as follow:
  * Every method prefixed with *Find* or *GetAll* behaves as if they were decorated with {{{[Granted("Read")]}}}
  * Every method prefixed with *Create*, *Remove* or *Update* behaves as if they were decorated with {{{[Granted("Write")]}}}
  * Not decorated method are considered as granted to everyone
  * Methods that are decorated with {{{InspectionIgnoredAttribute}}} are considered as granted to everyone