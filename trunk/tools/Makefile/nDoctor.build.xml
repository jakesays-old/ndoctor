<?xml version="1.0"?>
<project default="Post-Build" xmlns="http://nant.sf.net/release/0.92/nant.xsd">

  <!--
  Uncomment these few lines if the nAnd Contrib binaries are not in the same directory than the nAnt files.
  Bear in mind these lines are an example, therefore configure what has to be configured ;)
  -->
  <!--<property name="nantcontrib-dir"
            value="${path::combine(nant::get-base-directory(), '../../NAntContrib')}"
            overwrite="false" />

  <loadtasks assembly="${path::combine(nantcontrib-dir, 'bin/NAnt.Contrib.Tasks.dll')}"/>-->

  <!-- Properties -->
  <property name="release-dir" value="c:\nDoctor-Release" overwrite="false"/> 
  <property name="code-dir" value="${release-dir}\bin"/>
  <property name="sln-file" value="Probel.NDoctor.sln" overwrite="false"/>
  <property name="tool-dir" value="${release-dir}\bin\tools"/>
  <property name="build-mode" value="release" overwrite="false"/>
  <property name="svn-repository" value="http://ndoctor.googlecode.com/svn/trunk/"/>

  <!-- Targets -->
  <target name="Pre-Build" description="Export the code locally">
    <echo message="========================================================================"/>
    <echo message="release-dir   : ${release-dir}"/>
    <echo message="code-dir      : ${code-dir}"/>
    <echo message="sln-file      : ${sln-file}"/>
    <echo message="tool-dir      : ${tool-dir}"/>
    <echo message="build-mode    : ${build-mode}"/>
    <echo message="svn-repository: ${svn-repository}"/>
    <echo message="========================================================================"/>

    <echo message="Clean previous files"/>
    <delete dir="${code-dir}"/>
    <exec program="svn.exe"
          commandline="checkout &quot;${svn-repository}&quot; &quot;${code-dir}&quot; --username jibedoubleve@gmail.com --password aQ5aP3ng8ZY4"/>
  </target>

  <target name ="Set-Release-Mode" depends="Pre-Build">
    
    <!-- Create a temp .prj file with that build a windows application and not a console application -->
    <copy file     ="${code-dir}\src\View\Probel.NDoctor.View.Core\Probel.NDoctor.View.Core.csproj"
          tofile   ="${code-dir}\src\View\Probel.NDoctor.View.Core\Probel.NDoctor.View.Core.csproj.temp"
          overwrite="true"
          verbose  ="true">
      <filterchain>
        <replacestring from="&lt;OutputType&gt;Exe&lt;/OutputType&gt;"
                       to="&lt;OutputType&gt;WinExe&lt;/OutputType&gt;"/>
      </filterchain>
    </copy>

    <!-- Override the old .prj file with the new build instructions -->
    <delete file="${code-dir}\src\View\Probel.NDoctor.View.Core\Probel.NDoctor.View.Core.csproj"/>
    <copy file="${code-dir}\src\View\Probel.NDoctor.View.Core\Probel.NDoctor.View.Core.csproj.temp"
          tofile="${code-dir}\src\View\Probel.NDoctor.View.Core\Probel.NDoctor.View.Core.csproj"/>
    <delete file="${code-dir}\src\View\Probel.NDoctor.View.Core\Probel.NDoctor.View.Core.csproj.temp"/>
  </target>

  <target name="Build" description="Build the solution" depends="Set-Release-Mode">
    <!-- Build the solution -->
    <echo message="Building"/>
    <echo message="Build mode: ${build-mode}"/>
    <msbuild project="${code-dir}\src\${sln-file}"
             verbosity="Detailed">
      <property name="Configuration" value="${build-mode}"/>
    </msbuild>
  </target>

  <target name="Post-Build" description="Execute the post build actions" depends="Build">
    <exec program="${tool-dir}\CopyPluginsFiles.cmd">
      <arg value="${build-mode}"/>
    </exec>
  </target>

  <!-- Create a release package with the binaries -->
  <target name="Release" description="Zip the binaries and rename the file" depends="Post-Build">    

    <echo message="Copying i18n files..."/>
    <copy todir="${release-dir}\fr">
      <fileset basedir="${code-dir}\src\View\Probel.NDoctor.View.Core\bin\${build-mode}\fr"/>
    </copy>

    <echo message="Copying plugins..."/>
    <copy todir="${release-dir}\Plugins">
      <fileset basedir="${code-dir}\src\View\Probel.NDoctor.View.Core\bin\${build-mode}\Plugins"/>
    </copy>

    <echo message="Copying main files..."/>
    <copy todir="${release-dir}">
      <fileset basedir="${code-dir}\src\View\Probel.NDoctor.View.Core\bin\${build-mode}\">
        <exclude name="*.vshost.exe"/>
        <exclude name="*.vshost.exe.config"/>
        <include name="*.dll"/>
        <include name="*.exe"/>
        <include name="*.log4net"/>
        <include name="*.config"/>
      </fileset>
    </copy>

    <echo message="Deactivate debug plugin if exists"/>
    <loadfile file="${release-dir}\Plugins\plugins.config.xml" property="file-content"/>
    <echo file="${release-dir}\Plugins\plugins.config.xml"
          message="${string::replace(file-content, '  &lt;Plugin name=&quot;Debug Tools&quot;            path=&quot;DebugTools&quot;          activated=&quot;true&quot;/&gt;','')}"/>
    <delete dir="${release-dir}\Plugins\DebugTools" failonerror="false"/>

    <loadfile file="${code-dir}\src\Version.cs" property="version-file"/>
    <regex pattern="AssemblyVersion\(\&quot;(?'version'3.*.*.*)*\&quot;"
           input="${version-file}"/>
    <echo message="Version number: ${version}"/>

    <zip zipfile="${release-dir}\nDoctor.${version}.zip">
      <fileset basedir="${release-dir}">
        <exclude name="bin\**" />
        <include name="**.*"/>
      </fileset>
    </zip>

    <echo message="Clean temporary files"/>
    <delete dir="${release-dir}\fr"/>
    <delete dir="${release-dir}\Plugins"/>
    <delete dir="${code-dir}"/>
    <delete>
      <fileset basedir="${release-dir}">
        <exclude name="*.zip"/>
        <include name="**.*"/>
      </fileset>
    </delete>

  </target>
</project>