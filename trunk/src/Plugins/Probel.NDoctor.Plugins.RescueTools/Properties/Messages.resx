<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Btn_Refresh" xml:space="preserve">
    <value>Find doubloons...</value>
    <comment>Find doubloons...</comment>
  </data>
  <data name="Btn_Replace" xml:space="preserve">
    <value>Replace</value>
    <comment>Replace</comment>
  </data>
  <data name="Btn_ReplaceWithFirst" xml:space="preserve">
    <value>Replace with first doublon</value>
    <comment>Replace with first doublon</comment>
  </data>
  <data name="Gb_Address" xml:space="preserve">
    <value>Address</value>
    <comment>Address</comment>
  </data>
  <data name="Gb_Details" xml:space="preserve">
    <value>Details</value>
    <comment>Details</comment>
  </data>
  <data name="Gb_Doubloons" xml:space="preserve">
    <value>Doubloons</value>
    <comment>Doubloons</comment>
  </data>
  <data name="Gb_KeptDoctor" xml:space="preserve">
    <value>Kept doctor</value>
    <comment>Kept doctor</comment>
  </data>
  <data name="Gb_ProContact" xml:space="preserve">
    <value>Profesionnal contact</value>
    <comment>Profesionnal contact</comment>
  </data>
  <data name="Lbl_Mail" xml:space="preserve">
    <value>Email</value>
    <comment>Email</comment>
  </data>
  <data name="Lbl_Mobile" xml:space="preserve">
    <value>Phone</value>
    <comment>Phone</comment>
  </data>
  <data name="Lbl_Phone" xml:space="preserve">
    <value>Mobile</value>
    <comment>Mobile</comment>
  </data>
  <data name="Msg_ConfirmReplacement" xml:space="preserve">
    <value>Do you want to replace doubloons with this doctor? If you click on "Yes", you'll replace all the other doubloons with this doctor and delete all the doubloons from the database. This action can't be undone.</value>
    <comment>Do you want to replace doubloons with this doctor? If you click on "Yes", you'll replace all the other doubloons with this doctor and delete all the doubloons from the database. This action can't be undone.</comment>
  </data>
  <data name="Msg_ConfirmReplaceWithFirst" xml:space="preserve">
    <value>Vous êtes sur le point de remplacer TOUS les médecins avec le même nom, prénom et spécialisation avec le premier doublon trouvé. N'appliquez cette commande que si vous êtes certains que tous les médecins doublons contiennent les même données! Voulez-vous procéder?</value>
    <comment>You are about to replace ALL the doctors with the same name, surname and specialisation with the first found doubloon. Do not execute this command if you are not sure all the doubloons doctors have the same data! Do you want to proceed?</comment>
  </data>
  <data name="Msg_DoubloonsCount" xml:space="preserve">
    <value>Doubloons: {0}</value>
    <comment>Doubloons: {0}</comment>
  </data>
  <data name="Msg_DoubloonsDeleted" xml:space="preserve">
    <value>Doubloons has been deleted</value>
    <comment>Doubloons has been deleted</comment>
  </data>
  <data name="Msg_DoubloonsFound" xml:space="preserve">
    <value>{0} doublon(s) trouvé(s)</value>
    <comment>Found {0} doubloon(s)</comment>
  </data>
  <data name="Msg_ReplaceDoctorExplanations" xml:space="preserve">
    <value>By clicking on "Replace", you will remove all doubloons and replace them with this doctor. This action cannot be cancelled!</value>
    <comment>By clicking on "Replace", you will remove all doubloons and replace them with this doctor. This action CANNOT be cancelled!</comment>
  </data>
  <data name="Tab_Age" xml:space="preserve">
    <value>Patients too old</value>
    <comment>Patients too old</comment>
  </data>
  <data name="Tab_DoctorDoubloons" xml:space="preserve">
    <value>Doubloons doctors</value>
    <comment>Doubloons doctors</comment>
  </data>
  <data name="Title_FirstAidManager" xml:space="preserve">
    <value>Database management</value>
    <comment>Database management</comment>
  </data>
  <data name="Title_Page" xml:space="preserve">
    <value>Database management</value>
    <comment>Database management</comment>
  </data>
  <data name="Db_SearchOnAge" xml:space="preserve">
    <value>Search on age</value>
    <comment>Search on age</comment>
  </data>
  <data name="Dgv_Age" xml:space="preserve">
    <value>Age</value>
    <comment>Age</comment>
  </data>
  <data name="Dgv_Birthdate" xml:space="preserve">
    <value>Birthdate</value>
    <comment>Birthdate</comment>
  </data>
  <data name="Dgv_FirstName" xml:space="preserve">
    <value>First name</value>
    <comment>First name</comment>
  </data>
  <data name="Dgv_LastName" xml:space="preserve">
    <value>Last name</value>
    <comment>Last name</comment>
  </data>
  <data name="Dgv_Deactivated" xml:space="preserve">
    <value>Deactivated?</value>
    <comment>Deactivated?</comment>
  </data>
  <data name="Btn_DeactivateAll" xml:space="preserve">
    <value>Deactivate all</value>
    <comment>Deactivate all</comment>
  </data>
  <data name="Msg_PatientUpdated" xml:space="preserve">
    <value>Patient updated</value>
    <comment>Patient updated</comment>
  </data>
</root>