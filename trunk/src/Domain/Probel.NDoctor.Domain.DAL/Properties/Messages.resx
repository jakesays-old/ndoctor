<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Msg_ErrorDbCreationImpossible" xml:space="preserve">
    <value>Impossible to create the database</value>
  </data>
  <data name="Msg_ErrorInvalidHbmPath" xml:space="preserve">
    <value>The path where to export the HBM files is invalid or doesn't exist!</value>
  </data>
  <data name="Msg_ErrorDbInvalidPath" xml:space="preserve">
    <value>The path to the database is invalid or the file doesn't exist</value>
    <comment>The path to the database is invalid or the file doesn't exist</comment>
  </data>
  <data name="Msg_ErrorSessionFactoryNull" xml:space="preserve">
    <value>The session factory is not set. Are you sure you have configured nHibernate for this instance?</value>
  </data>
  <data name="Msg_ErrorSQLiteConfigurationNotSet" xml:space="preserve">
    <value>The SQLiteConfiguration is not set!</value>
  </data>
  <data name="Validation_Password" xml:space="preserve">
    <value>You didn't entered twice the same password. </value>
    <comment>You didn't entered twice the same password.</comment>
  </data>
  <data name="Validation_PasswordCantBeEmpty" xml:space="preserve">
    <value>The password can't be empty</value>
    <comment>The password can't be empty</comment>
  </data>
  <data name="Msg_ErrorSessionAlreadyOpenException" xml:space="preserve">
    <value>A session is already opened. Please, close the opened session before opening a new one.</value>
    <comment>A session is already opened. Please, close the opened session before opening a new one.</comment>
  </data>
  <data name="Explanation_Administer" xml:space="preserve">
    <value>A user with this right can modify data about administration</value>
    <comment>A user with this right can modify data about administration </comment>
  </data>
  <data name="Explanation_Everyone" xml:space="preserve">
    <value>Everyone can execute this feature</value>
    <comment>Everyone can execute this feature</comment>
  </data>
  <data name="Explanation_Metawrite" xml:space="preserve">
    <value>A user with this right can modify data about himself/herself such as his/her password</value>
    <comment>A user with this right can modify data about himself/herself such as his/her password</comment>
  </data>
  <data name="Explanation_Read" xml:space="preserve">
    <value>A user with this right can read data</value>
    <comment>A user with this right can read data</comment>
  </data>
  <data name="Explanation_Write" xml:space="preserve">
    <value>A user with this right can write and edit data (but not about himself/herself or administration)</value>
    <comment>A user with this right can write and edit data (but not about himself/herself or administration)</comment>
  </data>
  <data name="Task_Administer" xml:space="preserve">
    <value>Administer</value>
    <comment>Administer</comment>
  </data>
  <data name="Task_Everyone" xml:space="preserve">
    <value>Everyone</value>
    <comment>Everyone</comment>
  </data>
  <data name="Task_Metawrite" xml:space="preserve">
    <value>Metawrite</value>
    <comment>Metawrite</comment>
  </data>
  <data name="Task_Read" xml:space="preserve">
    <value>Read</value>
    <comment>Read</comment>
  </data>
  <data name="Task_Write" xml:space="preserve">
    <value>Write</value>
    <comment>Write</comment>
  </data>
  <data name="Explanation_Administrator" xml:space="preserve">
    <value>The administrator has all the rights in the application</value>
    <comment>The administrator has all the rights in the application</comment>
  </data>
  <data name="Explanation_Doctor" xml:space="preserve">
    <value>The doctor can read and mofify all the data but he/she cant read or modify  adlinistration data</value>
    <comment>The doctor can read and mofify all the data but he/she cant read or modify  adlinistration data</comment>
  </data>
  <data name="Explanation_Secretary" xml:space="preserve">
    <value>The secretary can read all the data but only modify the calendar</value>
    <comment>The secretary can read all the data but only modify the calendar</comment>
  </data>
  <data name="Role_Administrator" xml:space="preserve">
    <value>Administrator</value>
    <comment>Administrator</comment>
  </data>
  <data name="Role_Doctor" xml:space="preserve">
    <value>Doctor</value>
    <comment>Doctor</comment>
  </data>
  <data name="Role_Secretary" xml:space="preserve">
    <value>Secretary</value>
    <comment>Secretary</comment>
  </data>
  <data name="Explanation_EditCalendar" xml:space="preserve">
    <value>Un utilisateur qui a ce droit peut ajouter, modifier ou supprimer des rendez-vous dans l'agenda.</value>
    <comment>A user with this right can add, update or delete apointments in the calendar.</comment>
  </data>
  <data name="Task_EditCalendar" xml:space="preserve">
    <value>Editer les agendas</value>
    <comment>Edit calendars</comment>
  </data>
  <data name="Ex_ReferencialIntegrityException_Deletion" xml:space="preserve">
    <value>Couldn't remove this item because it is referenced somewhere else.</value>
    <comment>Couldn't remove this item because it is referenced somewhere else.</comment>
  </data>
  <data name="Ex_NoSuperAdmin" xml:space="preserve">
    <value>The database is in a wrong state: there is no super admin.</value>
    <comment>The database is in a wrong state: there is no super admin.</comment>
  </data>
  <data name="Invalid_Data" xml:space="preserve">
    <value>You typed invalid data</value>
    <comment>You typed invalid data</comment>
  </data>
  <data name="Tag_Default_Prescription" xml:space="preserve">
    <value>Prescription</value>
    <comment>Prescription</comment>
  </data>
  <data name="Ex_InvalidMacroException" xml:space="preserve">
    <value>The macro is not valid or is malformed</value>
    <comment>The macro is not valid or is malformed</comment>
  </data>
  <data name="Ex_ArgumentException_NotBaseComponent" xml:space="preserve">
    <value>The component is not of type 'BaseComponent' but of type '{0}'!</value>
    <comment>The component is not of type 'BaseComponent' but of type '{0}'!</comment>
  </data>
  <data name="Ex_CirularLinkFamily" xml:space="preserve">
    <value>You try to add a patient as his/her child or parent</value>
    <comment>You try to add a patient as his/her child or parent</comment>
  </data>
  <data name="Ex_QueryException_SeveralDefaultUsers" xml:space="preserve">
    <value>More than one default user was found.</value>
    <comment>More than one default user was found. </comment>
  </data>
  <data name="Ex_ExistingItemException_UserWithSameName" xml:space="preserve">
    <value>A user with the same first and last name already exist.</value>
    <comment>A user with the same first and last name already exist</comment>
  </data>
</root>