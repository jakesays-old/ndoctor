<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ex_DalConfigurationException" xml:space="preserve">
    <value>An error occured during the configuration of the database</value>
  </data>
  <data name="Ex_QueryException" xml:space="preserve">
    <value>An error occured during the execution of a query. {0}</value>
  </data>
  <data name="Msg_ErrorDbCreationImpossible" xml:space="preserve">
    <value>Impossible to create the database</value>
  </data>
  <data name="Msg_ErrorInvalidHbmPath" xml:space="preserve">
    <value>The path where to export the HBM files is invalid or doesn't exist!</value>
  </data>
  <data name="Msg_ErrorDbInvalidPath" xml:space="preserve">
    <value>The path to the database is invalid or the file doesn't exist</value>
    <comment>The path to the database is invalid or the file doesn't exist</comment>
  </data>
  <data name="Msg_ErrorSessionFactoryNull" xml:space="preserve">
    <value>The session factory is not set. Are you sure you have configured nHibernate for this instance?</value>
  </data>
  <data name="Msg_ErrorSQLiteConfigurationNotSet" xml:space="preserve">
    <value>The SQLiteConfiguration is not set!</value>
  </data>
  <data name="Validation_Password" xml:space="preserve">
    <value>You didn't entered twice the same password. </value>
    <comment>You didn't entered twice the same password.</comment>
  </data>
  <data name="Validation_PasswordCantBeEmpty" xml:space="preserve">
    <value>The password can't be empty</value>
    <comment>The password can't be empty</comment>
  </data>
  <data name="Ex_ClosedSessionException" xml:space="preserve">
    <value>The session you're using to query the database is closed.</value>
    <comment>The session you're using to query the database is closed.</comment>
  </data>
  <data name="Ex_NullSessionFactoryException" xml:space="preserve">
    <value>The nHibernate session factory is not configured.</value>
    <comment>The nHibernate session factory is not configured.</comment>
  </data>
  <data name="Ex_ExistingItemException" xml:space="preserve">
    <value>The item you want to create already exist in the database.</value>
    <comment>The item you want to create already exist in the database.</comment>
  </data>
  <data name="Ex_EntityNotFoundException" xml:space="preserve">
    <value>The specified item doesn't exist in the database</value>
    <comment>The specified item doesn't exist in the database</comment>
  </data>
  <data name="Ex_NotLoadedEntityException" xml:space="preserve">
    <value>The entity you are using is detached  from the database.</value>
    <comment>The entity you are using is detached  from the database.</comment>
  </data>
  <data name="Msg_ErrorSessionAlreadyOpenException" xml:space="preserve">
    <value>A session is already opened. Please, close the opened session before opening a new one.</value>
    <comment>A session is already opened. Please, close the opened session before opening a new one.</comment>
  </data>
  <data name="Ex_SessionException" xml:space="preserve">
    <value>An error occured in the session</value>
    <comment>An error occured in the session</comment>
  </data>
  <data name="Msg_ErrorSessionNotOpen" xml:space="preserve">
    <value>The session is not open. Please open it before querying the database.</value>
    <comment>The session is not open. Please open it before query the database.</comment>
  </data>
  <data name="Ex_QueryException_SeveralDefaultUsers" xml:space="preserve">
    <value>More than one default user was found.</value>
    <comment>More than one default user was found.</comment>
  </data>
  <data name="Ex_EntityNotFoundException_NoPatient" xml:space="preserve">
    <value>No patient with id '{0}' was found.</value>
    <comment>No patient with id '{0}' was found.</comment>
  </data>
  <data name="Ex_BusinessLogicException" xml:space="preserve">
    <value>Impossible to execute this action. This is a unexpected state that wasn't forseen or it will break business logic rules.</value>
    <comment>Impossible to execute this action. This is a unexpected state that wasn't forseen or it will break business logic rules.</comment>
  </data>
  <data name="Ex_EntityNotFoundException_NoRelationRightSide" xml:space="preserve">
    <value>The patient of right side of the relation doesn't exist in the database</value>
    <comment>The patient of right side of the relation doesn't exist in the database</comment>
  </data>
  <data name="Ex_EmptyPasswordException" xml:space="preserve">
    <value>Empty password are not accepted</value>
    <comment>Empty password are not accepted</comment>
  </data>
  <data name="Ex_EntityAlreadyExistsException" xml:space="preserve">
    <value>This entity already exist in the database</value>
    <comment>This entity already exist in the database</comment>
  </data>
  <data name="Ex_DalSessionException_UnknownId" xml:space="preserve">
    <value>The ID type is '{0}' while expecting '{1}'</value>
    <comment>Le type de l'ID attendu est '{0}' alors qu'il est '{1}'</comment>
  </data>
  <data name="DalSessionException_UnknownId1" xml:space="preserve">
    <value>The ID type is '{0}' while expecting '{1}'</value>
    <comment>Le type de l'ID est '{0}' alors qu'il devrait être '{1}'</comment>
  </data>
</root>